name: Test and Publish
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - synchronize
      - opened
      - reopened
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Version. Must be an existing tag'
        required: true

jobs:
  # Label of the container job
  tests:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    env:
      default_branch: 'refs/heads/master'

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: localdev
          POSTGRES_USER: contiamo_test
          POSTGRES_DB: postgres
        ports:
        # will assign a random free host port
        - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # validate workflow_dispatch is for a tag
      - uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        if: ${{ github.event.inputs.release_tag }}
        with:
          tag: ${{ github.event.inputs.release_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2.4.0
      - uses: actions/setup-go@v2.1.5
        with:
          go-version: '1.16'
      - name: Print env
        run: make env
      - name: Format
        run: make fmt
      # use the action instead of make because it is slightly faster
      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.39
      - name: Tests
        run: make .test-ci
        env:
          POSTGRES_PASSWORD: localdev
          POSTGRES_USER: contiamo_test
          POSTGRES_DB: postgres

  # we can use a separate job here because we don't have any post-release Docker steps
  release:
    needs: tests
    runs-on: ubuntu-latest
    env:
      default_branch: 'refs/heads/master'
    steps:
      #####################
      # Release and Publish
      #####################
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: release
        if: ${{ github.ref == env.default_branch || github.event.inputs.release_tag }}
        with:
          # use the CI token to pretend not to be a action?
          # if this works then the resulting PRs will trigger
          # the test-build-publish
          token: ${{ secrets.CONTIAMO_CI_TOKEN }}
          release-type: go-yoshi
          package-name: ""
